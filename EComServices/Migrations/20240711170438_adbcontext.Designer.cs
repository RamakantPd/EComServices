// <auto-generated />
using EComServices.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EComServices.Migrations
{
    [DbContext(typeof(AdbContextConfiguration))]
    [Migration("20240711170438_adbcontext")]
    partial class adbcontext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EComServices.Models.AddedItemsIntoCartForLoggedUser", b =>
                {
                    b.Property<int>("ProductSrNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSrNo"));

                    b.Property<bool>("Delete")
                        .HasColumnType("BIT");

                    b.Property<string>("Image_Name")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("ItemId")
                        .HasColumnType("Int");

                    b.Property<string>("Item_Name")
                        .IsRequired()
                        .HasColumnType("Varchar(200)");

                    b.Property<decimal>("Item_Qty")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.HasKey("ProductSrNo");

                    b.ToTable("D_CartItems");
                });

            modelBuilder.Entity("EComServices.Models.CountryListModel", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Country_Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("CountryId");

                    b.ToTable("CountryList");
                });

            modelBuilder.Entity("EComServices.Models.FileCompressionModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("file_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("FileCompressInfo");
                });

            modelBuilder.Entity("EComServices.Models.LoginSuccessModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("LoginSuccessModel");
                });

            modelBuilder.Entity("EComServices.Models.MailRequest", b =>
                {
                    b.Property<int>("MailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MailId"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MailId");

                    b.ToTable("MailRequest");
                });

            modelBuilder.Entity("EComServices.Models.ProductCategoryModel", b =>
                {
                    b.Property<int>("PId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PId"));

                    b.Property<string>("Image_Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("P_Category")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("Prod_CateId")
                        .HasColumnType("INT");

                    b.HasKey("PId");

                    b.ToTable("M_ProductCategory");
                });

            modelBuilder.Entity("EComServices.Models.ProductModel", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProdId"));

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.HasKey("ProdId");

                    b.ToTable("M_ProductType");
                });

            modelBuilder.Entity("EComServices.Models.ProductSubCategoryWiseListModel", b =>
                {
                    b.Property<int>("PSCWId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PSCWId"));

                    b.Property<string>("P_Description")
                        .IsRequired()
                        .HasColumnType("Varchar(200)");

                    b.Property<string>("P_Image_Name")
                        .IsRequired()
                        .HasColumnType("Varchar(400)");

                    b.Property<decimal>("P_Price")
                        .HasColumnType("Decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.Property<int>("ProductWiseCategory")
                        .HasColumnType("Int");

                    b.HasKey("PSCWId");

                    b.ToTable("D_CategoryWiseProductDetail");
                });

            modelBuilder.Entity("EComServices.Models.StateListModel", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("State_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.ToTable("StateList");
                });

            modelBuilder.Entity("EComServices.Models.UploadFilesAndImagesModel", b =>
                {
                    b.Property<int>("DocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocId"));

                    b.Property<string>("FileTitle")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("DocId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("EComServices.Models.UserLogin", b =>
                {
                    b.Property<int>("Empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Empid"));

                    b.Property<string>("Email_id")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Empid");

                    b.ToTable("LoginUser");
                });

            modelBuilder.Entity("EComServices.Models.UserRegistrationModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("Contact_No")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email_Id")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Middle_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("UserRegistration");
                });
#pragma warning restore 612, 618
        }
    }
}
